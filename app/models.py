from peewee import (
    Model, CharField, BooleanField,
    DateTimeField, TextField, ForeignKeyField, UUIDField
)
import datetime
import uuid

from .db import db  # ðŸ‘ˆ gebruik de gedeelde db uit app/db.py
from peewee import DatabaseError


class BaseModel(Model):
    class Meta:
        database = db


class Profile(BaseModel):
    id = UUIDField(primary_key=True, default=uuid.uuid4)
    email = CharField(unique=True, max_length=255)
    name = CharField(null=True, max_length=255)
    role = CharField(default="USER")  # USER of ADMIN
    is_active = BooleanField(default=True)
    created_at = DateTimeField(default=datetime.datetime.utcnow)


class Topic(BaseModel):
    title = CharField(max_length=255)
    description = TextField(null=True)
    created_at = DateTimeField(default=datetime.datetime.utcnow)


class Subtopic(BaseModel):
    topic = ForeignKeyField(Topic, backref="subtopics", on_delete="CASCADE")
    title = CharField(max_length=255)
    description = TextField(null=True)
    created_at = DateTimeField(default=datetime.datetime.utcnow)


def create_tables():
    with db:
        db.create_tables([Profile, Topic, Subtopic])


def ensure_profile_id_autoincrement():
    """
    Ensures that the Postgres table `profile.id` auto-generates values.
    Fixes cases where an old table was created without a DEFAULT/identity.
    """
    try:
        # Try to add identity (Postgres 10+). If it already exists, this will error; we'll ignore.
        db.execute_sql('ALTER TABLE "profile" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY')
        return
    except Exception:
        pass

    try:
        # Fallback: ensure a sequence exists and set DEFAULT nextval
        db.execute_sql('CREATE SEQUENCE IF NOT EXISTS profile_id_seq OWNED BY profile.id')
        db.execute_sql('ALTER TABLE "profile" ALTER COLUMN "id" SET DEFAULT nextval(\'profile_id_seq\')')
    except DatabaseError:
        # As a last resort, ignore if we cannot change it (e.g., permissions). The app will surface clearer errors.
        pass
